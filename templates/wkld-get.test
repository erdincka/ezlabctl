# Get workload cluster's kubeconfig

# Command:
# ./ezfabricctl workload get kubeconfig --kubeconfig </path/to/orchestrator/kubeconfig> --save-kubeconfig </path/to/save/workload/kubeconfig> --clustername <workload-clustername>

# --orchestrator-kubeconfig is deprecated. new flag name is --kubeconfig

# workload kubeconfig will be saved to the location defined in '--save-kubeconfig'

# For tunnel
# 1. Create an input yaml, only k8sConfig section is required. See the example below
# 2. Command:
#  ./ezfabricctl workload get kubeconfig --input </path/to/input-file> --save-kubeconfig </path/to/save/workload/kubeconfig> --clustername <workload-clustername>

#Example input yaml
#k8sConfig:
#  provider: tunnel
#  tunnel: # it is for tunnel
#    ezFabUrl: "" #string(required): ezfab kube-apiserver url (e.g. https://m2-lr1-dev-vm210235.mip.storage.hpecorp.net:6443)
#    ezFabToken: "" #string(required): ezfab service account token, token can be generated by 'kubectl create token'
#    ezFabCaCert: "" #base64-encoded-string(required): ezfab k8s cluster ca cert (by default it is in /etc/kubernetes/pki/ca.crt)
#    deviceSerial: "" #string(required): DSC VM device id (a.k.a activation code, station id, or sid)
#    tunlNatsAddr: "" #string: nats addr, default: nats://priv-nats.tunnel.svc.cluster.local:4222
#    tunlObjApiAddr: "" #string: obj api addr, default: http://priv-object.tunnel.svc.cluster.local:50052
#    intIssuerUrl: ""  #string: tunnel internal issuer, default: http://priv-keystore.tunnel.svc.cluster.local:29090